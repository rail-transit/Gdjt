<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.passenger.mapper.MessageMapper">
    <select id="selectMessage" resultType="com.example.passenger.entity.Message">
        SELECT
          *
        FROM
            Message
        WHERE
            id = #{id}
    </select>
    <select id="getMessageByCondition" resultType="com.example.passenger.entity.Message">
        SELECT
        *
        FROM
        Message
        <where>
            <if test="deviceID != null">
                AND DeviceID = #{deviceID}
            </if>
            <if test="playState != null">
                AND PlayState = #{playState}
            </if>
            <if test="level != null">
                AND Level = #{level}
            </if>
            <if test="msg != null">
                AND Msg = #{msg}
            </if>
        </where>
    </select>
    <select id="getMessage" resultType="com.example.passenger.entity.Message">
        SELECT
            *
        FROM
            Message
        where
            Level = #{level}
            AND DeviceID = #{deviceID}
            AND ( PlayState = 1 OR PlayState = 2)
    </select>
    <select id="getMaxLevel" resultType="java.lang.Integer">
        SELECT
	        max(b.[Level])
        FROM
            Message a,
            Msg_Level b
        where
            a.Level = b.LevelCode
            AND a.DeviceID = #{deviceID}
            AND ( a.PlayState= 1 OR a.PlayState= 2)
    </select>
    <select id="getMessageByIsPlanMsg" resultType="com.example.passenger.entity.Message">
        SELECT
            *
        FROM
            Message
        WHERE
            id = #{id}
           	and CONVERT ( VARCHAR ( 10 ), GETDATE(), 120 ) >= StartDate
            and CONVERT ( VARCHAR ( 8 ), GETDATE(), 108 ) >= EndTime
    </select>
    <select id="selectMessageByStartTime" resultType="com.example.passenger.entity.Message">
        SELECT
            *
        FROM
            Message
        WHERE
            CONVERT ( VARCHAR ( 10 ), GETDATE(), 120 ) >= StartDate
            AND CONVERT ( VARCHAR ( 8 ), GETDATE(), 108 ) >= StartTime
            AND State = 1
            AND PlayState = 0
    </select>
    <select id="selectMessageByPlanMsg" resultType="com.example.passenger.entity.Message">
        SELECT
            *
        FROM
            Message
        WHERE
            CONVERT ( VARCHAR ( 10 ), GETDATE(), 120 ) >= StartDate
            AND CONVERT ( VARCHAR ( 8 ), GETDATE(), 108 ) >= EndTime
            AND State = 1
            AND ( PlayState = 1 OR PlayState = 2)
            AND IsPlanMsg = 1
    </select>
    <select id="selectMessageByEndTime" resultType="com.example.passenger.entity.Message">
        SELECT
            *
        FROM
            Message
        WHERE
            CONVERT ( VARCHAR ( 10 ), GETDATE(), 120 ) >= EndDate
            AND CONVERT ( VARCHAR ( 8 ), GETDATE(), 108 ) >= EndTime
            AND State = 1
            AND ( PlayState = 1 OR PlayState = 2)
            AND IsPlanMsg = 0
    </select>
    <select id="queryGroupingMessage" resultType="com.example.passenger.entity.Message">
        SELECT
            Msg
        FROM
            Message
        WHERE
            ( PlayState = 1 OR PlayState = 2 )
        GROUP BY Msg
    </select>
    <select id="selectPaging" resultType="com.example.passenger.entity.vo.MessageVo">
        SELECT TOP
        ( #{ pageSize } ) *
        FROM
        (
        SELECT
        ROW_NUMBER () OVER ( ORDER BY a.id DESC ) AS RowNumber,
        a.*,
        b.Name AS deviceName,
        c.Name AS stationName,
        d.Name AS lineName
        FROM
        Message a
        LEFT JOIN Device b ON a.DeviceID= b.ID
        LEFT JOIN Station c ON b.StationID= c.ID
        LEFT JOIN Line d ON b.LineID= d.ID
        <where>
            <if test="playState != null and playState != ''">
                <if test="playState == 2">
                    AND ( PlayState =#{ playState } OR PlayState = 0)
                </if>
                AND PlayState = #{playState}
            </if>
            <if test="state != null">
                AND State = #{state}
            </if>
            <if test="msg != null and msg != ''">
                AND Msg like '%'+#{msg}+'%'
            </if>
            <if test="startDate != null and endDate != null">
                AND convert(char(10),a.StartDate,20) between #{startDate} and #{endDate}
            </if>
            <if test="lineID!=null and lineID!=''">
                AND d.ID = #{lineID}
            </if>
            <if test="stationID!=null and stationID!=''">
                AND c.ID = #{stationID}
            </if>
            <if test="deviceID!=null and deviceID!=''">
                AND b.ID = #{deviceID}
            </if>
        </where>
        ) AS A
        WHERE
        RowNumber > #{pageSize} * (
        #{pageNum}-1)
    </select>
    <select id="count" resultType="java.lang.Integer">
        SELECT COUNT
        ( * )
        FROM
        Message
        <where>
            <if test="playState!=null and playState!=''">
                <if test="playState==2">
                    AND (PlayState = #{playState} or PlayState = 0)
                </if>
                AND PlayState = #{playState}
            </if>
            <if test="state != null">
                AND State = #{state}
            </if>
            <if test="msg!=null and msg!=''">
                AND Msg like '%'+#{msg}+'%'
            </if>
            <if test="startDate!=null and endDate!=null">
                AND convert(char(10),a.StartDate,20) between #{startDate} and #{endDate}
            </if>
            <if test="lineID!=null and lineID!=''">
                AND d.ID = #{lineID}
            </if>
            <if test="stationID!=null and stationID!=''">
                AND c.ID = #{stationID}
            </if>
            <if test="deviceID!=null and deviceID!=''">
                AND b.ID = #{deviceID}
            </if>
        </where>
    </select>
    <select id="getRelease" resultType="java.util.LinkedHashMap">
        SELECT
        Row_Number () OVER ( ORDER BY a.id DESC ) AS id,
        d.Name AS lineName,
        c.Name AS stationName,
        b.Name AS deviceName,
        a.Msg,
        a.StartDate,
        a.EndDate,
        a.StartTime,
        a.EndTime,
        a.Operator
        FROM
        Message a
        LEFT JOIN Device b ON a.DeviceID= b.ID
        LEFT JOIN Station c ON b.StationID= c.ID
        LEFT JOIN Line d ON b.LineID= d.ID
        <where>
            <if test="startDate!=null and endDate!=null">
                AND convert(char(10),a.StartDate,20) between #{startDate} and #{endDate}
            </if>
            <if test="lineID!=null and lineID!=''">
                AND d.ID = #{lineID}
            </if>
            <if test="stationID!=null and stationID!=''">
                AND c.ID = #{stationID}
            </if>
            <if test="deviceID!=null and deviceID!=''">
                AND b.ID = #{deviceID}
            </if>
        </where>
    </select>
    <insert id="addMessage" parameterType="com.example.passenger.entity.Message">
        INSERT INTO Message ( Msg, [Level], Type, StartDate, EndDate, StartTime, EndTime, DeviceID, CtrlID, Operator, IsPlanMsg )
        VALUES
            (
                #{ msg },
                #{ level },
                #{ type },
                #{ startDate },
                #{ endDate },
                #{ startTime },
                #{ endTime },
                #{ deviceID },
                #{ ctrlID },
            #{ operator },
            #{ isPlanMsg })
    </insert>
    <update id="updateMessage" parameterType="java.lang.Integer">
        UPDATE Message
        <set>
            <if test="state != null">
                State = #{state},
            </if>
            <if test="playState != null">
                PlayState = #{playState},
            </if>
        </set>
        WHERE
        ID =#{id}
    </update>
    <delete id="deleteMessage" parameterType="java.lang.Integer">
        DELETE
        FROM
            Message
        WHERE
            id = #{id}
    </delete>
</mapper>